{"version":3,"file":"bundle.js","mappings":"mBAAC,MAAMA,EAAiBC,GAClBA,GAAK,EACAA,EAEAC,EAAUD,EAAI,GAAKC,EAAUD,EAAI,GAStCC,EALU,CAACC,IACf,MAAMC,EAAQ,CAAC,EACf,OAAQC,GAAQD,EAAMC,KAASD,EAAMC,GAAOF,EAAaE,GAAK,EAG9CC,CAAQN,SCI1B,GAAKO,iBAAiB,WAAYC,IAChC,MAAM,KAAEC,GAASD,QACjB,GAAKE,YAAYV,EAAcS,GAAM,G","sources":["webpack://animation-buttons/./fibonacci/formula_fibonacci_with_cache.js","webpack://animation-buttons/./worker_fibonacci.js"],"sourcesContent":["﻿const old_fibonacci = (n) => {\r\n  if (n <= 1) {\r\n    return n;\r\n  } else {\r\n    return fibonacci(n - 1) + fibonacci(n - 2);\r\n  }\r\n};\r\n\r\nconst memoize = (fn_fibonacci) => {\r\n  const cache = {};\r\n  return (arg) => cache[arg] || (cache[arg] = fn_fibonacci(arg));\r\n};\r\n\r\nconst fibonacci = memoize(old_fibonacci);\r\n\r\n\r\nexport { old_fibonacci };\r\nexport { memoize };\r\nexport { fibonacci };\r\n","﻿import { fibonacci, memoize, old_fibonacci} from \"./fibonacci/formula_fibonacci_with_cache\";\r\n\r\n// const old_fibonacci = (n) => {\r\n//   if (n <= 1) {\r\n//     return n;\r\n//   } else {\r\n//     return fibonacci(n - 1) + fibonacci(n - 2);\r\n//   }\r\n// };\r\n\r\n// const memoize = (fn_fibonacci) => {\r\n//   const cache = {};\r\n//   return (arg) => cache[arg] || (cache[arg] = fn_fibonacci(arg));\r\n// };\r\n\r\n// const fibonacci = memoize(old_fibonacci);\r\n\r\nthis.addEventListener(\"message\", (message) => {\r\n  const { data } = message;\r\n  this.postMessage(old_fibonacci(data));\r\n});\r\n\r\n\r\n"],"names":["old_fibonacci","n","fibonacci","fn_fibonacci","cache","arg","memoize","addEventListener","message","data","postMessage"],"sourceRoot":""}